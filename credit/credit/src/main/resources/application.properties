spring.application.name=credit


# Email configuration for Spring Boot to use Gmail for sending emails
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com  # Use your actual Gmail username
spring.mail.password=your-password         # Use your actual Gmail password
spring.mail.properties.mail.smtp.auth=true       # Authentication flag
spring.mail.properties.mail.smtp.starttls.enable=true  # TLS must be enabled

# Kafka configuration properties
spring.kafka.bootstrap-servers=localhost:9092  # Kafka server address
spring.kafka.consumer.group-id=claim-group     # Kafka consumer group ID
spring.kafka.consumer.auto-offset-reset=earliest  # Offset reset policy for new consumers
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer  # Key deserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer  # Value deserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer  # Key serializer for producers
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer  # Value serializer for producers

# Log4j2 root logger configuration
rootLogger.level = info
rootLogger.appenderRefs = stdout, file
rootLogger.appenderRef.stdout.ref = Standard Console
rootLogger.appenderRef.file.ref = File

# Console appender configuration for logging
appender.console.type = Console
appender.console.name = Standard Console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n

# File appender configuration for logging to a file
appender.file.type = File
appender.file.name = File
appender.file.fileName = logs/app.log  # Log file path
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n

# Log rotation policies and strategy
appender.file.policies.type = Policies
appender.file.policies.time.type = TimeBasedTriggeringPolicy
appender.file.policies.time.interval = 1
appender.file.policies.time.modulate = true
appender.file.strategy.type = DefaultRolloverStrategy
appender.file.strategy.max = 20

# Splunk HEC (HTTP Event Collector) configuration
splunk.hec.uri=https://your-splunk-instance:8088
splunk.hec.token=your-hec-token   # HEC authentication token
splunk.hec.index=your-index       # Index to send data to

# Redis configuration for Spring Data Redis
spring.redis.host=localhost
spring.redis.port=6379
# spring.redis.password=yourpassword  # Uncomment and set if Redis requires authentication

# OAuth2 client configuration for Google
spring.security.oauth2.client.registration.google.client-id=your-client-id
spring.security.oauth2.client.registration.google.client-secret=your-client-secret
spring.security.oauth2.client.registration.google.scope=openid, email, profile
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

